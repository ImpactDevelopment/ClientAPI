/*
 * Copyright 2018 ImpactDevelopment
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
    repositories {
        maven {
            name = 'forge'
            url = 'http://files.minecraftforge.net/maven'
        }
        maven {
            name = 'SpongePowered'
            url = 'http://repo.spongepowered.org/maven'
        }
        jcenter()
    }

    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:${project.forgeGradleVersion}"
        classpath "org.spongepowered:mixingradle:${project.mixinGradleVersion}"
    }
}

plugins {
    id 'java'
    id 'maven-publish'
}

apply plugin: 'net.minecraftforge.gradle.tweaker-client'
apply plugin: 'org.spongepowered.mixin'
apply from: 'methods.gradle'

version = getVersionFromJava()

sourceCompatibility = targetCompatibility = '1.8' // Needed so Eclipse task generates correctly
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

sourceSets {
    example {
        compileClasspath += main.compileClasspath + main.output
    }
    debug {
        compileClasspath += example.compileClasspath + example.output
    }
}

reobf {
    jar {
        mappingType = 'SEARGE'
    }
    releaseJar {
        mappingType = 'NOTCH'
        classpath = sourceSets.main.compileClasspath
    }
}

repositories {
    mavenCentral()

    maven {
        name = 'impactdevelopment-repo'
        url = 'https://impactdevelopment.github.io/maven/'
    }

    maven {
        name = 'spongepowered-repo'
        url = 'http://repo.spongepowered.org/maven/'
    }
}

dependencies {
    compile "com.github.ZeroMemes:Alpine:${project.alpineVersion}"
    compile "net.jodah:typetools:${project.typetoolsVersion}"
    compile("org.spongepowered:mixin:${project.mixinVersion}") {
        // Mixin includes a lot of dependencies that are too up-to-date
        exclude module: 'launchwrapper'
        exclude module: 'guava'
        exclude module: 'gson'
        exclude module: 'commons-io'
        exclude module: 'log4j-core'
    }
    testCompile "junit:junit:${project.junitVersion}"
}

minecraft {
    version = project.minecraftVersion
    mappings = project.mappings
    tweakClass = 'clientapi.load.ClientTweaker'
    runDir = 'run'

    // The sources jar should use SRG names not MCP to ensure compatibility with all mappings
    makeObfSourceJar = true
}

apply from: 'tasks.gradle'

artifacts {
    archives jar
    archives releaseJar
    archives sourceJar
//    archives javadocJar // FIXME JavaDoc build errors
    archives makeCDK
}

mixin {
    defaultObfuscationEnv notch
    add sourceSets.main, 'mixins.capi.refmap.json'
    add sourceSets.test, 'mixins.client.refmap.json'
}

// Create the pom configuration:
def pomConfig = {
    licenses {
        license {
            name 'The Apache Software License, Version 2.0'
            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
            distribution 'repo'
        }
    }
    developers {
        developer {
            id 'brady'
            name 'Brady'
            email 'zeromemesdev@gmail.com'
        }
        developer {
            id 'leaf'
            name 'LeafHacker'
            email 'leafhacker@yahoo.com'
        }
    }

    scm {
        url project.url
    }
}

// Create the publication with the pom configuration:
publishing {
    repositories {
        maven {
            url "build/maven"
        }
    }
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact releaseJar
            artifact sourceJar
//            artifact javadocJar // FIXME
            groupId project.group
            artifactId project.name
            version project.version
            pom.withXml {
                def root = asNode()
                root.appendNode('description', project.description)
                root.appendNode('name', project.name)
                root.appendNode('url', project.url)
                root.children().last() + pomConfig
            }
        }
    }
}
