/*
 * Copyright 2017 ImpactDevelopment
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
    repositories {
        mavenCentral()
        maven {
            name = 'forge'
            url = 'http://files.minecraftforge.net/maven'
        }
        maven {
            name = 'SpongePowered'
            url = 'http://repo.spongepowered.org/maven'
        }
    }

    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:${project.forgeGradleVersion}"
        classpath "org.spongepowered:mixingradle:${project.mixinGradleVersion}"
    }
}

plugins {
    id 'java'
    id 'groovy'
    id 'com.diffplug.gradle.spotless' version '3.5.1'
}

apply plugin: 'net.minecraftforge.gradle.tweaker-client'
apply plugin: 'org.spongepowered.mixin'
apply from: 'methods.gradle'

version = getVersionFromJava()

sourceCompatibility = targetCompatibility = '1.8' // Needed so Eclipse task generates correctly
compileJava { sourceCompatibility = targetCompatibility = '1.8' }

repositories {
    mavenCentral()

    maven {
        name = 'impactdevelopment-repo'
        url = 'https://impactdevelopment.github.io/maven/'
    }

    maven {
        name = 'spongepowered-repo'
        url = 'http://repo.spongepowered.org/maven/'
    }
}

dependencies {
    compile "com.github.ZeroMemes:Alpine:${project.alpineVersion}"
    compile "net.jodah:typetools:${project.typetoolsVersion}"
    compile("org.spongepowered:mixin:${project.mixinVersion}") {
        exclude module: 'launchwrapper'
        exclude module: 'guava'
        exclude module: 'gson'
        exclude module: 'commons-io'
    }
}

minecraft {
    version = project.minecraftVersion
    mappings = project.mappings
    tweakClass = 'clientapi.load.ClientTweaker'
    runDir = 'run'

    makeObfSourceJar = false
}

apply from: 'tasks.gradle'

artifacts { archives makeCDK }

mixin {
    defaultObfuscationEnv notch
    add sourceSets.main, 'mixins.capi.refmap.json'
    add sourceSets.test, 'mixins.client.refmap.json'
}

spotless {
    java {
        // Override default target to exclude feather
        target fileTree("src") {
            exclude 'main/java/pw'
            include '**/*.java'
        }

        licenseHeaderFile 'license.java'

        eclipse().configFile('format.properties')

        importOrder 'clientapi', 'me.zero', 'net.minecraft', 'org.spongepowered', 'com', 'org', 'net', 'java', ''
        removeUnusedImports()

        trimTrailingWhitespace()
        endWithNewline()
    }

    groovyGradle {
        // Override default target to include subdirectories
        target '**/*.gradle'

        greclipse().configFile('format.properties')

        trimTrailingWhitespace()
        endWithNewline()
    }

    format('properties') {
        target '**/*.properties'

        replaceRegex 'Assignment should be preceded by a single space', '(?:\\s+|([^\\s]))=', '$1 ='
        replaceRegex 'Assignment should be followed by a single space', '=(?:\\s+|([^\\s])|^)', '= $1'

        trimTrailingWhitespace()
        endWithNewline()
    }

    format('misc') {
        target '**/*.md', '**/.gitignore', '**/.editorconfig'

        trimTrailingWhitespace() // Might break some markdown
        endWithNewline()
    }
}
